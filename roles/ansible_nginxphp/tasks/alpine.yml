- name: Install nginx packages
  apk:
          name: nginx
          state: present
- name: Install php packages
  apk:
          name: php7-fpm php7-mcrypt php7-soap php7-openssl php7-gmp php7-pdo_odbc php7-json php7-dom php7-pdo php7-zip php7-mysqli php7-sqlite3 php7-apcu php7-pdo_pgsql php7-bcmath php7-gd php7-odbc php7-pdo_mysql php7-pdo_sqlite php7-gettext php7-xmlreader php7-xmlrpc php7-bz2 php7-iconv php7-pdo_dblib php7-curl php7-ctype php7-mbstring php7-fileinfo php7-zlib imagemagick php7-session php7-sockets php7-pear php7-pcntl php7-ldap php7-simplexml php7-xmlwriter
          state: present
- name: Install python passlib for authentication
  apk:
          name: py3-passlib
          repository: http://alpine.42.fr/edge/community
          state: present
          update_cache: yes
- name: create shared webhost directory /var/www/vhosts
  file:
          path: /var/www/vhosts
          state: directory
          mode: '0771'
          owner: nginx
          group: nginx
- name: copy nginx.conf
  copy:
          src: nginxalpine.conf
          dest: /etc/nginx/nginx.conf
          owner: root
          group: root
          mode: '0744'
- name: copy default.conf
  copy:
          src: defaultalpine.conf
          dest: /etc/nginx/conf.d/default.conf
          owner: root
          group: root
          mode: '0744'
- name: copy phpfpm config
  copy:
          src: phpfpm.conf
          dest: /etc/php7/php-fpm.d/www.conf
          owner: root
          group: root
          mode: '0744'
- name: config php.sh
  copy:
          src: php7.sh
          dest: /etc/profile.d/php7.sh
          owner: root
          group: root
          mode: '0744'
- name: copy php.ini
  copy:
          src: php.ini
          dest: /etc/php7/php.ini
          owner: root
          group: root
          mode: '0644'
- name: create vhost root dir
  file:
          path: "/var/www/vhosts/{{ item.fqdn }}"
          state: directory
          mode: '0750'
          owner: nginx
          group: nginx
  when: nginxvhost is defined
  loop: "{{ nginxvhost }}"
- name: copy vhost template
  template:
          src: vhostnginx.conf
          dest: "/etc/nginx/conf.d/{{ item.fqdn }}.conf"
          owner: root
          group: root
          mode: '0744'
  when: nginxvhost is defined
  loop: "{{ nginxvhost }}"
  notify: restart nginx
  # es ist nicht die Aufgabe der nginx Rolle IP Adressen zu setzen
  #- name: add vhost secondary ip script
  #  template:
  #          src: secondaryipalpine.yml
  #          dest: "/etc/network/if-up.d/{{ item.fqdn }}"
  #          owner: root
  #          group: root
  #          mode: '0770'
  #  when: nginxvhost is defined
  #  loop: "{{ nginxvhost }}"
  #  notify: restart network
- name: Setup basic authentication
  htpasswd:
          path: "{{ item.authfile }}"
          name: "{{ item.authuser }}"
          password: "{{ item.authpassword }}"
          owner: "{{ nginxuser }}"
          group: "{{ nginxgroup }}"
          mode: 0640
  loop: "{{ authenticationitems }}"
  when: authenticationitems is defined
- name: copy php.ini
  template:
    src: php.ini.j2
    dest: /etc/php7/php.ini
  notify: restart nginx
- name: Copy fastcgi_param file
  template:
    src: fastcgi_params.j2
    dest: /etc/nginx/fastcgi_params
- name: enable php-fpm
  service:
          name: php-fpm7
          enabled: yes
          state: started
- name: enable nginx
  service:
          name: nginx
          enabled: yes
          state: restarted
