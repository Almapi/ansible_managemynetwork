---
#- name: setup string
#  ansible.builtin.set_fact:
#    stringvar: "'{{ current_device.value.name }}': { 'id': '{{ current_device.key }}', 'comments': '{{ current_device.value.comments | default('undefined', true) }}', 'device_role': '{{ current_device.value.device_role.display | default('undefined', true) }}', 'device_type': '{{ current_device.value.device_type.display | default('undefined', true) }}', 'interfaces': { '{{ current_interface.value.name }}': { 'id': '{{ current_interface.key }}', 'ip4': '{{ current_ip.value.address }}', 'description': '{{ current_ip.value.description | default('undefined', true)}}' , 'dns_name': '{{ current_ip.value.dns_name | default('', true) }}' }}}"
#  when:
#    - current_ip.value.assigned_object_type == "dcim.interface"
#    - current_ip.value.assigned_object
#    - current_ip.value.assigned_object.device.id == current_device.key
#    - current_ip.value.assigned_object.id == current_interface.key
      #- name: debug string
      #  ansible.builtin.debug:
      #    var: stringvar
      #  when:
      #    - current_ip.value.assigned_object_type == "dcim.interface"
      #    - current_ip.value.assigned_object
      #    - current_ip.value.assigned_object.device.id == current_device.key
      #    - current_ip.value.assigned_object.id == current_interface.key
      #    - current_ip.value.family.value == 4
- name: combining found ip4 find into dict
  ansible.builtin.set_fact:
    nb_devices: "{{ nb_devices | default({}) | combine({current_device.value.name: { 'id': current_device.key, 'comments': current_device.value.comments | default('undefined', true), 'device_role': current_device.value.device_role.display | default('undefined', true), 'device_type': current_device.value.device_type.display | default('undefined', true), 'interfaces': { current_interface.value.name: { 'id': current_interface.key, 'description': current_interface.value.description | default('undefined', true), 'dns_name': current_ip.value.dns_name | default('undefined', true), 'ip4': current_ip.value.address }}}}, recursive=true ) }}"
  when:
    - current_ip.value.assigned_object_type == "dcim.interface"
    - current_ip.value.assigned_object
    - current_ip.value.assigned_object.device.id == current_device.key
    - current_ip.value.assigned_object.id == current_interface.key
    - current_ip.value.family.value == 4
- name: combining found ip6 find into dict
  ansible.builtin.set_fact:
    nb_devices: "{{ nb_devices | default({}) | combine({current_device.value.name: { 'id': current_device.key, 'comments': current_device.value.comments | default('undefined', true), 'device_role': current_device.value.device_role.display | default('undefined', true), 'device_type': current_device.value.device_type.display | default('undefined', true), 'interfaces': { current_interface.value.name: { 'id': current_interface.key, 'description': current_interface.value.description | default('undefined', true), 'dns_name': current_ip.value.dns_name | default('undefined', true), 'ip6': current_ip.value.address }}}}, recursive=true ) }}"
  when:
    - current_ip.value.assigned_object_type == "dcim.interface"
    - current_ip.value.assigned_object
    - current_ip.value.assigned_object.device.id == current_device.key
    - current_ip.value.assigned_object.id == current_interface.key
    - current_ip.value.family.value == 6
      #- name: debug
      #  debug:
      #    var: nb_devices
