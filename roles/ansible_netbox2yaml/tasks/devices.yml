---
# Fetching
- name: "Fetching all devices"
  ansible.builtin.set_fact:
    nb_devices_fetched: "{{ query('netbox.netbox.nb_lookup', 'devices', api_endpoint=NETBOX_URL, token=NETBOX_TOKEN) }}"
- name: "Fetching interfaces"
  ansible.builtin.set_fact:
    nb_interfaces_fetched: "{{ query('netbox.netbox.nb_lookup', 'interfaces', api_filter='assigned_object_type=dcim.interface', api_endpoint=NETBOX_URL, token=NETBOX_TOKEN) }}"
- name: "Fetching IP addresses"
  ansible.builtin.set_fact:
    nb_ips_fetched: "{{ query('netbox.netbox.nb_lookup', 'ip-addresses',  api_filter='status=active', api_endpoint=NETBOX_URL, token=NETBOX_TOKEN) }}"
    #- name: debug devices
    #  debug:
    #    var: nb_devices_fetched
    #- name: debug interfaces
    #  debug:
    #    var: nb_interfaces_fetched
- name: debug ips
  debug:
    var: nb_ips_fetched
# Creating Vars
- name: Configure IP json query
  ansible.builtin.set_fact:
    query_ips: '[*].value[?assibned_object_id==4]'
    #    query_ips: '[].{id: value.assigned_object_id,
    #                    address: value.address,
    #                    family: value.family.value}'
- name: Build IPs dict
  ansible.builtin.set_fact:
    dict_ips: "{{ nb_ips_fetched | json_query(query_ips) }}"
- name: debug IPs
  debug:
    var: dict_ips
# Write to file
#- name: write devices to file
#  ansible.builtin.template:
#    src: netbox_devices.jinja2
#    dest: "{{ nb_devices_destination }}"
